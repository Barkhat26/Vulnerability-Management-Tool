import sys
import logging
from pprint import pprint

from matching.cve_matcher import CVEMatcher
from database import Database

logging.basicConfig(level=logging.INFO, format="%(message)s")

def main():
    if len(sys.argv) != 2:
        logging.error("Usage: python %s <CPE_URI (CPE v2.3)>" % sys.argv[0])
        logging.info("Example: python %s 'cpe:2.3:a:microsoft:.net_framework:4.0:*:*:*:*:*:*:*'" % sys.argv[0])
        exit(1)

    cve_matcher = CVEMatcher()
    cve_matches = cve_matcher.search_cves_for_cpe(sys.argv[1])
    logging.info("Found %d CVEs:" % len(cve_matches))

    for cve_match in cve_matches:
        cve_match['cpe_entries'] = [x['cpe_entry'] for x in Database().get_cpes_from_cve(cve_match['id'])]
        cve_match['impact'] = {k: v for k, v in Database().get_impact(cve_match['impact_id']).items() if k != 'id'}
        del cve_match['impact_id']
        cve_match['access'] = {k: v for k, v in Database().get_access(cve_match['access_id']).items() if k != 'id'}
        del cve_match['access_id']
        pprint(cve_match)

if __name__ == '__main__':
    main()